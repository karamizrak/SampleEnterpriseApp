// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SampleEntDev.Core.Entities.Schemas;
using SampleEntDev.Repository;
using System;
using System.Collections.Generic;

#nullable disable

namespace SampleEntDev.Repository.Configurations
{
    public partial class UserToFuncitonsConfiguration : IEntityTypeConfiguration<UserToFuncitons>
    {
        public void Configure(EntityTypeBuilder<UserToFuncitons> entity)
        {
            entity.ToTable("UserToFuncitons", "management");

            entity.Property(e => e.Id)
                .HasColumnName("id")
                .HasDefaultValueSql("nextval('management.\"UserToFunciton_id_seq\"'::regclass)");

            entity.Property(e => e.CreatedDate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("created_date")
                .HasDefaultValueSql("CURRENT_TIMESTAMP");

            entity.Property(e => e.FunctionId).HasColumnName("function_id");

            entity.Property(e => e.UpdatedDate)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("updated_date");

            entity.Property(e => e.UserId).HasColumnName("user_id");

            entity.Property(e => e.ValidityPeriodEndTime)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("validity_period_end_time");

            entity.Property(e => e.ValidityPeriodStartTime)
                .HasColumnType("timestamp without time zone")
                .HasColumnName("validity_period_start_time");

            entity.HasOne(d => d.Function)
                .WithMany(p => p.UserToFuncitons)
                .HasForeignKey(d => d.FunctionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("UserToFunciton_function_id_fkey");

            entity.HasOne(d => d.User)
                .WithMany(p => p.UserToFuncitons)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("UserToFunciton_user_id_fkey");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<UserToFuncitons> entity);
    }
}
